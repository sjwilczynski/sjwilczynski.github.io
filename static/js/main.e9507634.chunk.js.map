{"version":3,"sources":["components/navigation/face.jpg","components/navigation/Navigation.tsx","components/head/Head.tsx","data/wrappers/IconWrapper.tsx","components/sections/about/IconWithLink.tsx","data/wrappers/SocialMediaData.ts","components/sections/about/SocialMedias.tsx","components/sections/about/About.tsx","components/resume/ResumeList.tsx","components/resume/ResumeItem.tsx","components/sections/Section.tsx","components/resume/ResumeSection.tsx","components/sections/skills/Skills.tsx","data/wrappers/ConcertData.ts","components/sections/interests/Interests.tsx","data/wrappers/AboutData.ts","data/wrappers/ResumeItemData.ts","data/wrappers/ResumeListElementData.ts","data/wrappers/ResumeListData.ts","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","Navigation","props","scrollTo","element","scroller","duration","smooth","Navbar","expand","bg","variant","fixed","collapseOnSelect","onSelect","eventKey","event","preventDefault","id","Brand","className","fullName","src","face","alt","onClick","Toggle","aria-controls","Collapse","Nav","Object","entries","sections","map","keyValue","Item","key","Link","active","href","Head","rel","charSet","name","content","description","children","IconWrapper","iconComponent","Map","FaGithub","FaLinkedinIn","FaStackOverflow","FaGitlab","FaHeart","FaAward","FaMedal","FaGraduationCap","FaCheck","get","iconComponentName","GiFlame","React","createElement","iconClassName","IconWithLink","link","SocialMediaData","data","this","SocialMedias","socialMedias","medias","socialMediaData","social","About","about","surname","city","country","email","source","introduction","ResumeList","listClassName","elements","icon","liStyle","renderers","paragraph","ResumeItem","itemData","headings","heading","subheading","extraInfos","info","Section","title","ResumeSection","resumeItems","resumeItem","Skills","skills","numColumns","skillsChunked","perChunk","Math","ceil","length","reduce","resultArray","item","index","chunkIndex","floor","push","splitToChunks","skillChunk","ConcertData","startDate","endDate","location","readDate","getTime","dateToString","date","dateParts","split","part","parseInt","Date","toLocaleDateString","Interests","useState","showConcerts","setShowConcerts","concertsList","concertDatas","concertData","sort","c1","c2","Button","block","concert","getDate","iconStyle","background","color","AboutData","githubUrl","ResumeItemData","ResumeListElementData","ResumeListData","elementData","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","experience","education","projects","research","achievements","interests","aboutData","experienceResumeItems","experienceListData","resumeItemData","educationResumeItems","educationListData","researchResumeItems","researchListData","projectsResumeList","projectListData","achievementResumeList","achievementListData","skillsResumeLists","skillListData","resumeListData","getFullName","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e9507634.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face.4637069b.jpg\";","import React from \"react\";\nimport face from \"./face.jpg\";\nimport { scroller } from \"react-scroll\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"./navigation.scss\";\nimport { Sections } from \"../../App\";\n\ntype NavigationProps = {\n  fullName: string;\n  sections: Sections;\n};\n\nexport default function Navigation(props: NavigationProps) {\n  /* these 2 functions together with properties of body allow scroll spying and smooth scroll */\n  let onSelect = (eventKey: string, event: React.SyntheticEvent<unknown>) => {\n    event.preventDefault();\n    scrollTo(eventKey);\n  };\n  let scrollTo = (element: any) => {\n    scroller.scrollTo(element, {\n      duration: 1000,\n      smooth: \"easeInOutQuint\"\n    });\n  };\n\n  return (\n    <>\n      <Navbar\n        expand=\"lg\"\n        bg=\"primary\"\n        variant=\"dark\"\n        fixed=\"top\"\n        collapseOnSelect\n        onSelect={onSelect}\n        id=\"sideNav\"\n      >\n        <Navbar.Brand>\n          <span className=\"d-block d-lg-none\">{props.fullName}</span>\n          <span className=\"d-none d-lg-block\">\n            <img\n              className=\"img-fluid img-profile rounded-circle mx-auto mb-2\"\n              src={face}\n              alt=\"Face\"\n              onClick={() => scrollTo(\"root\")}\n            />\n          </span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbarSupportedContent\" />\n        <Navbar.Collapse id=\"navbarSupportedContent\">\n          <Nav>\n            {Object.entries(props.sections).map(keyValue => (\n              <Nav.Item key={keyValue[0]}>\n                <Nav.Link\n                  active={false}\n                  eventKey={keyValue[0]}\n                  href={\"#\" + keyValue[0]}\n                >\n                  {keyValue[1]}\n                </Nav.Link>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\ntype HeadProps = {\n  description: string;\n  fullName: string;\n  children?: any;\n};\n\nexport default function Head(props: HeadProps) {\n  return (\n    <>\n      <Helmet>\n        <link\n          rel=\"shortcut icon\"\n          href={process.env.PUBLIC_URL + \"/img/favicon.ico\"}\n        />\n\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n        />\n\n        <meta name=\"description\" content={props.description} />\n        <meta name=\"author\" content={props.fullName} />\n        {props.children}\n      </Helmet>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  FaAward,\n  FaCheck,\n  FaGithub,\n  FaGitlab,\n  FaGraduationCap,\n  FaHeart,\n  FaLinkedinIn,\n  FaMedal,\n  FaStackOverflow\n} from \"react-icons/fa\";\n\nimport \"./icon-wrapper.scss\";\nimport { IconType } from \"react-icons\";\nimport { GiFlame } from \"react-icons/gi\";\n\ntype IconWrapperProps = {\n  iconComponentName: string;\n  iconClassName: string;\n};\n\nexport default function IconWrapper(props: IconWrapperProps) {\n  const iconComponents: Map<string, IconType> = new Map<string, IconType>([\n    [\"FaGithub\", FaGithub],\n    [\"FaLinkedinIn\", FaLinkedinIn],\n    [\"FaStackOverflow\", FaStackOverflow],\n    [\"FaGitlab\", FaGitlab],\n    [\"FaHeart\", FaHeart],\n    [\"FaAward\", FaAward],\n    [\"FaMedal\", FaMedal],\n    [\"FaGraduationCap\", FaGraduationCap],\n    [\"FaCheck\", FaCheck]\n  ]);\n\n  const iconComponent: IconType =\n    iconComponents.get(props.iconComponentName) || GiFlame;\n  return React.createElement(iconComponent, { className: props.iconClassName });\n}\n","import React from \"react\";\nimport \"./icons.scss\";\nimport IconWrapper from \"../../../data/wrappers/IconWrapper\";\n\ntype IconWithLinkProps = {\n  className: string;\n  iconComponentName: string;\n  link: string;\n};\n\nexport default function IconWithLink(props: IconWithLinkProps) {\n  return (\n    <a href={props.link} className={props.className}>\n      <IconWrapper\n        iconComponentName={props.iconComponentName}\n        iconClassName={\"svg-inline--fa\"}\n      />\n    </a>\n  );\n}\n","export class SocialMediaData {\n  readonly id: number;\n  readonly link: string;\n  readonly iconComponentName: string;\n\n  constructor(data: any) {\n    this.id = data.id;\n    this.link = data.link;\n    this.iconComponentName = data.iconComponentName;\n  }\n}\n","import React from \"react\";\nimport medias from \"../../../data/social-media.json\";\nimport IconWithLink from \"./IconWithLink\";\nimport { SocialMediaData } from \"../../../data/wrappers/SocialMediaData\";\n\nexport default function SocialMedias() {\n  const socialMedias = medias.map(\n    (socialMediaData: any) => new SocialMediaData(socialMediaData)\n  );\n  return (\n    <div>\n      {socialMedias.map((social: SocialMediaData) => (\n        <IconWithLink\n          key={social.id}\n          className={\"icon-with-link\"}\n          iconComponentName={social.iconComponentName}\n          link={social.link}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport SocialMedias from \"./SocialMedias\";\nimport ReactMarkdown from \"react-markdown\";\nimport { AboutData } from \"../../../data/wrappers/AboutData\";\n\ntype AboutProps = {\n  data: AboutData;\n};\n\nexport default function About(props: AboutProps) {\n  const about = props.data;\n  return (\n    <>\n      <h1 className=\"mb-0\">\n        {about.name}\n        <span className=\"text-primary\"> {about.surname}</span>\n      </h1>\n      <div className=\"subheading mb-5\">\n        {about.city}, {about.country},\n        <a href={\"mailto:\" + about.email}> {about.email}</a>\n      </div>\n      <ReactMarkdown className=\"lead mb-5\" source={about.introduction} />\n      <SocialMedias />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./resume-list.scss\";\nimport { ResumeListData } from \"../../data/wrappers/ResumeListData\";\nimport IconWrapper from \"../../data/wrappers/IconWrapper\";\n\ntype ResumeListProps = {\n  data: ResumeListData;\n};\n\nexport default function ResumeList(props: ResumeListProps) {\n  return (\n    <>\n      <ul className={\"fa-ul mb-0 \" + props.data.listClassName}>\n        {props.data.elements.map(element => {\n          let icon = element.iconComponentName ? (\n            <IconWrapper\n              iconComponentName={element.iconComponentName}\n              iconClassName={\n                (element.iconClassName || \"\") + \" svg-inline--fa fa-li\"\n              }\n            />\n          ) : (\n            \"\"\n          );\n          let liStyle = element.iconComponentName ? \"list-none\" : \"\";\n          return (\n            <li className={liStyle} key={element.id}>\n              {icon}{\" \"}\n              <ReactMarkdown\n                source={element.description}\n                renderers={{ paragraph: \"span\" }}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./resume-item.scss\";\nimport { ResumeItemData } from \"../../data/wrappers/ResumeItemData\";\n\ntype ResumeItemProps = {\n  data: ResumeItemData;\n};\n\nexport default function ResumeItem(props: ResumeItemProps) {\n  const itemData = props.data;\n  return (\n    <>\n      <div className=\"resume-item d-flex flex-column flex-md-row mb-5\">\n        <div className=\"resume-content mr-auto\">\n          {itemData.headings.map(heading => (\n            <h3 key={heading} className=\"mb-0\">\n              {heading}\n            </h3>\n          ))}\n          <div className=\"subheading mb-3\">{itemData.subheading}</div>\n          <ReactMarkdown source={itemData.description} />\n        </div>\n        <div className=\"resume-extra text-md-right\">\n          {itemData.extraInfos.map(info => (\n            <span key={info} className=\"text-primary\">\n              {info} <br />{\" \"}\n            </span>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\ntype SectionProps = {\n  id: string;\n  title?: string;\n  children?: any;\n};\n\nexport default function Section(props: SectionProps) {\n  return (\n    <>\n      <section\n        className=\"resume-section p-3 p-lg-5 d-flex flex-column\"\n        id={props.id}\n      >\n        <div className=\"my-auto\">\n          {props.title ? <h2 className=\"mb-5\">{props.title}</h2> : \"\"}\n          {props.children}\n        </div>\n      </section>\n      <hr className=\"m-0\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport ResumeItem from \"./ResumeItem\";\nimport Section from \"../sections/Section\";\nimport \"./resume-section.scss\";\nimport { ResumeItemData } from \"../../data/wrappers/ResumeItemData\";\n\ntype ResumeSectionProps = {\n  id: string;\n  title?: string;\n  resumeItems?: ResumeItemData[];\n  children?: any;\n};\n\nexport default function ResumeSection(props: ResumeSectionProps) {\n  const resumeItems = props.resumeItems || [];\n  return (\n    <>\n      <Section id={props.id} title={props.title}>\n        {resumeItems.map(resumeItem => (\n          <ResumeItem key={resumeItem.id} data={resumeItem} />\n        ))}\n        {props.children}\n      </Section>\n    </>\n  );\n}\n","import React from \"react\";\nimport ResumeList from \"../../resume/ResumeList\";\nimport { ResumeListData } from \"../../../data/wrappers/ResumeListData\";\nimport { ResumeListElementData } from \"../../../data/wrappers/ResumeListElementData\";\n\ntype SkillsProps = {\n  skills: ResumeListData;\n};\n\ntype SkillsChunk = {\n  id: number;\n  elements: ResumeListElementData[];\n  listClassName: string;\n};\n\nexport default function Skills(props: SkillsProps) {\n  const splitToChunks = function(\n    elements: ResumeListElementData[],\n    numColumns: number\n  ): SkillsChunk[] {\n    const perChunk = Math.ceil(elements.length / numColumns);\n\n    return elements.reduce((resultArray: SkillsChunk[], item, index) => {\n      const chunkIndex = Math.floor(index / perChunk);\n\n      if (!resultArray[chunkIndex]) {\n        resultArray[chunkIndex] = {\n          elements: [],\n          listClassName: skills.listClassName || \"\",\n          id: index\n        };\n      }\n\n      resultArray[chunkIndex].elements.push(item);\n\n      return resultArray;\n    }, []);\n  };\n\n  const skills = props.skills;\n  const numColumns = skills.numColumns || 1;\n  const skillsChunked = splitToChunks(skills.elements, numColumns);\n  return (\n    <>\n      <div className=\"subheading mb-3 mt-2\">{skills.title}</div>\n      <div className=\"d-flex\">\n        {skillsChunked.map(skillChunk => (\n          <div\n            key={skillChunk.id}\n            className={\"col-\" + Math.floor(12 / numColumns)}\n          >\n            <ResumeList key={skillChunk.id} data={skillChunk} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","export class ConcertData {\n  readonly id: number;\n  readonly startDate: Date;\n  readonly endDate: Date;\n  readonly title: string;\n  readonly location: string;\n  readonly description: string;\n\n  constructor(data: any) {\n    this.id = data.id;\n    this.startDate = this.readDate(data.startDate);\n    this.endDate = this.readDate(data.endDate);\n    this.title = data.title;\n    this.location = data.location;\n    this.description = data.description;\n  }\n\n  public getDate(): string {\n    return this.startDate.getTime() === this.endDate.getTime()\n      ? ConcertData.dateToString(this.startDate)\n      : ConcertData.dateToString(this.startDate) +\n          \" - \" +\n          ConcertData.dateToString(this.endDate);\n  }\n\n  private readDate(date: string) {\n    let dateParts = date.split(\".\").map(part => parseInt(part));\n    return new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);\n  }\n\n  private static dateToString(date: Date) {\n    return date.toLocaleDateString(\"pl-PL\");\n  }\n}\n","import React, { useState } from \"react\";\nimport concertDatas from \"./../../../data/concerts.json\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport { ConcertData } from \"../../../data/wrappers/ConcertData\";\nimport Button from \"react-bootstrap/Button\";\nimport { scroller } from \"react-scroll\";\nimport \"./interests.scss\";\nimport { GiGuitar } from \"react-icons/gi\";\nimport { FaBasketballBall, FaBook, FaPlane } from \"react-icons/fa\";\n\nexport default function Interests() {\n  const [showConcerts, setShowConcerts] = useState(false);\n\n  let onConcertsClick = () => {\n    setShowConcerts(showConcerts => !showConcerts);\n    scroller.scrollTo(\"interests\", {});\n  };\n\n  const concertsList = concertDatas\n    .map((concertData: any) => new ConcertData(concertData))\n    .sort(\n      (c1: ConcertData, c2: ConcertData) =>\n        c2.startDate.getTime() - c1.endDate.getTime()\n    );\n  return (\n    <>\n      <p>\n        Apart from being a programmer and a student, I mostly enjoy doing and\n        watching various sports, especially basketball, athletics, swimming and\n        football. Among basketball leagues I consider NBA to be most fascinating\n        and my two favorite players are{\" \"}\n        <a href=\"https://www.youtube.com/watch?v=w3l3txhX0L4\">\n          Russel Westbrook\n        </a>{\" \"}\n        and{\" \"}\n        <a href=\"https://www.youtube.com/watch?v=-f6TnC0xFPY\">Kevin Durant</a>{\" \"}\n        <FaBasketballBall className={\"basketball-ball-icon svg-inline--fa\"} />.\n        As a former sprinter I am still shocked by Wayde van Niekerk's{\" \"}\n        <a href=\"https://www.youtube.com/watch?v=xG91krXuxyw\">world record</a>.\n      </p>\n      <p>\n        As for my other interests, I am keen on travelling{\" \"}\n        <FaPlane className={\"svg-inline--fa\"} /> (most beautiful city - Porto,\n        Portugal, most astonishing view - Tatev, Armenia, best beach - Tangalle,\n        Sri Lanka). In my free time I like visiting escape rooms and reading{\" \"}\n        <a href=\"https://www.goodreads.com/user/show/100417409-stanis-aw-wilczy-ski\">\n          books\n        </a>\n        <FaBook className={\"book-icon svg-inline--fa\"} />. However, my most\n        beloved activity is going to rock concerts.\n        <Button className=\"mt-2 btn-concerts\" block onClick={onConcertsClick}>\n          {\" \"}\n          Click here to {showConcerts ? \"hide\" : \"view\"} the full concerts list{\" \"}\n        </Button>\n      </p>\n      {showConcerts && (\n        <VerticalTimeline>\n          {concertsList.map((concert: ConcertData) => (\n            <VerticalTimelineElement\n              key={concert.id}\n              date={concert.getDate()}\n              icon={<GiGuitar />}\n              iconStyle={{ background: \"#4479a2\", color: \"#fff\" }}\n            >\n              <h3>{concert.title}</h3>\n              <h4>{concert.location}</h4>\n              <p>{concert.description}</p>\n            </VerticalTimelineElement>\n          ))}\n        </VerticalTimeline>\n      )}\n      <p>\n        I am also an avid fan of the{\" \"}\n        <a href=\"https://en.wikipedia.org/wiki/Marvel_Cinematic_Universe\">\n          MCU\n        </a>{\" \"}\n        and a follower of{\" \"}\n        <a href=\"https://www.gapminder.org/factfulness-book/\">\n          Factfulness idea\n        </a>\n        .\n      </p>\n    </>\n  );\n}\n","export class AboutData {\n  readonly name: string;\n  readonly surname: string;\n  readonly city: string;\n  readonly country: string;\n  readonly email: string;\n  readonly githubUrl: string;\n  readonly introduction: string;\n\n  constructor(data: any) {\n    this.name = data.name;\n    this.surname = data.surname;\n    this.city = data.city;\n    this.country = data.country;\n    this.email = data.email;\n    this.githubUrl = data.githubUrl;\n    this.introduction = data.introduction;\n  }\n\n  getFullName(): string {\n    return this.name + \" \" + this.surname;\n  }\n}\n","export class ResumeItemData {\n  readonly id: number;\n  readonly headings: string[];\n  readonly subheading: string;\n  readonly extraInfos: string[];\n  readonly description?: string;\n\n  constructor(data: any) {\n    this.id = data.id;\n    this.headings = data.headings;\n    this.subheading = data.subheading;\n    this.extraInfos = data.extraInfos;\n    this.description = data.description;\n  }\n}\n","export class ResumeListElementData {\n  readonly id: number;\n  readonly description: string;\n  readonly iconComponentName?: string;\n  readonly iconClassName?: string;\n\n  constructor(data: any) {\n    this.id = data.id;\n    this.description = data.description;\n    this.iconComponentName = data.iconComponentName;\n    this.iconClassName = data.iconClassName;\n  }\n}\n","import { ResumeListElementData } from \"./ResumeListElementData\";\n\nexport class ResumeListData {\n  readonly elements: ResumeListElementData[];\n  readonly id?: number;\n  readonly title?: string;\n  readonly listClassName?: string;\n  readonly numColumns?: number;\n\n  constructor(data: any) {\n    this.elements = data.elements.map(\n      (elementData: any) => new ResumeListElementData(elementData)\n    );\n    this.id = data.id;\n    this.title = data.title;\n    this.listClassName = data.listClassName;\n    this.numColumns = data.numColumns;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as React from \"react\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Head from \"./components/head/Head\";\nimport About from \"./components/sections/about/About\";\nimport ResumeList from \"./components/resume/ResumeList\";\nimport ResumeSection from \"./components/resume/ResumeSection\";\nimport Skills from \"./components/sections/skills/Skills\";\nimport Interests from \"./components/sections/interests/Interests\";\n\nimport achievementListData from \"./data/achievements.json\";\nimport projectListData from \"./data/projects.json\";\nimport experienceListData from \"./data/experience.json\";\nimport educationListData from \"./data/education.json\";\nimport researchListData from \"./data/reasearch.json\";\nimport skillListData from \"./data/skills.json\";\nimport aboutData from \"./data/about.json\";\n\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./resume.scss\";\nimport ReactMarkdown from \"react-markdown\";\nimport { AboutData } from \"./data/wrappers/AboutData\";\nimport { ResumeItemData } from \"./data/wrappers/ResumeItemData\";\nimport { ResumeListData } from \"./data/wrappers/ResumeListData\";\n\nexport type Sections = {\n  [key: string]: string;\n};\n\nexport default function App() {\n  const sections: Sections = {\n    about: \"About\",\n    experience: \"Experience\",\n    education: \"Education\",\n    projects: \"Projects & apps\",\n    research: \"Research\",\n    skills: \"Skills\",\n    achievements: \"Achievements\",\n    interests: \"Interests\"\n  };\n  const about: AboutData = new AboutData(aboutData);\n\n  const experienceResumeItems: ResumeItemData[] = experienceListData.map(\n    (resumeItemData: any) => new ResumeItemData(resumeItemData)\n  );\n  const educationResumeItems: ResumeItemData[] = educationListData.map(\n    (resumeItemData: any) => new ResumeItemData(resumeItemData)\n  );\n  const researchResumeItems: ResumeItemData[] = researchListData.map(\n    (resumeItemData: any) => new ResumeItemData(resumeItemData)\n  );\n\n  const projectsResumeList: ResumeListData = new ResumeListData(\n    projectListData\n  );\n  const achievementResumeList: ResumeListData = new ResumeListData(\n    achievementListData\n  );\n  const skillsResumeLists: ResumeListData[] = skillListData.map(\n    (resumeListData: any) => new ResumeListData(resumeListData)\n  );\n\n  return (\n    <>\n      <Head description={\"CV page using React\"} fullName={about.getFullName()}>\n        <title>{about.getFullName()}</title>\n      </Head>\n      <Navigation sections={sections} fullName={about.getFullName()} />\n      <div className=\"container-fluid p-0\">\n        <ResumeSection id=\"about\">\n          <About data={about} />\n        </ResumeSection>\n\n        <ResumeSection\n          id=\"experience\"\n          title={sections.experience}\n          resumeItems={experienceResumeItems}\n        />\n\n        <ResumeSection\n          id=\"education\"\n          title={sections.education}\n          resumeItems={educationResumeItems}\n        />\n\n        <ResumeSection id=\"projects\" title={sections.projects}>\n          <ResumeList data={projectsResumeList} />\n          <ReactMarkdown\n            source={\n              \"More code can be found on my [github](\" + about.githubUrl + \")\"\n            }\n          />\n        </ResumeSection>\n\n        <ResumeSection\n          id=\"research\"\n          title={sections.research}\n          resumeItems={researchResumeItems}\n        />\n\n        <ResumeSection id=\"skills\" title={sections.skills}>\n          {skillsResumeLists.map(skills => (\n            <Skills key={skills.id} skills={skills} />\n          ))}\n        </ResumeSection>\n\n        <ResumeSection id=\"achievements\" title={sections.achievements}>\n          <ResumeList data={achievementResumeList} />\n        </ResumeSection>\n\n        <ResumeSection id=\"interests\" title={sections.interests}>\n          <Interests />\n        </ResumeSection>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}