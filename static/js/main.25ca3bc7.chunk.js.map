{"version":3,"sources":["components/navigation/face.webp","components/navigation/Navigation.tsx","components/head/Head.tsx","components/icons/Icon.tsx","components/icons/IconWithLink.tsx","components/sections/about/SocialMedias.tsx","components/sections/about/AboutSection.tsx","components/resume/ResumeListView.tsx","components/resume/ResumeItemView.tsx","components/sections/Section.tsx","components/resume/ResumeSection.tsx","components/sections/skills/Skills.tsx","components/sections/interests/Interests.tsx","data/getData.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["scrollTo","element","scroller","duration","smooth","onSelect","eventKey","event","preventDefault","Navigation","sections","fullName","firstSectionKey","Object","entries","Navbar","expand","bg","variant","fixed","collapseOnSelect","id","Brand","className","src","face","alt","onClick","Toggle","Collapse","Nav","map","keyValue","Item","Link","href","Head","description","children","Helmet","rel","charSet","name","content","Icon","iconClassName","iconComponentName","IconComponent","FaGithub","FaLinkedinIn","FaStackOverflow","FaGitlab","FaHeart","FaAward","FaMedal","FaGraduationCap","FaCheck","GiFlame","IconWithLink","link","title","SocialMedias","socialMedias","social","AboutSection","about","surname","city","country","email","introduction","ResumeListView","elements","listClassName","icon","liStyle","components","p","node","props","ResumeItemView","headings","subheading","extraInfos","heading","info","Section","ResumeSection","resumeItems","resumeItem","Skills","skills","numColumns","skillsChunked","perChunk","Math","ceil","length","reduce","resultArray","item","index","chunkIndex","floor","push","splitToChunks","skillChunk","Interests","concerts","useState","showConcerts","setShowConcerts","Button","concert","date","iconStyle","background","color","location","dateToLocalizedString","toLocaleDateString","readDateFromString","dateParts","split","part","parseInt","Date","App","experience","education","projects","research","achievements","interests","aboutData","experienceResumeItems","experienceListData","educationResumeItems","educationListData","researchResumeItems","researchListData","projectsResumeList","projectListData","achievementResumeList","achievementListData","skillsResumeLists","skillListData","socialMedia","concertsData","data","startDate","endDate","getTime","reverse","githubUrl","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sRAAe,MAA0B,kC,yCCYnCA,EAAW,SAACC,GAChBC,WAASF,SAASC,EAAS,CACzBE,SAAU,IACVC,OAAQ,oBAINC,EAAW,SACfC,EACAC,GAEAA,EAAMC,iBACFF,GACFN,EAASM,IAIAG,EAAa,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAC/BC,EAAkBC,OAAOC,QAAQJ,GAAU,GAAG,GAEpD,OACE,eAACK,EAAA,EAAD,CACEC,OAAO,KACPC,GAAG,UACHC,QAAQ,OACRC,MAAM,MACNC,kBAAgB,EAChBf,SAAUA,EACVgB,GAAG,UAPL,UASE,eAACN,EAAA,EAAOO,MAAR,WACE,sBAAMC,UAAU,oBAAhB,SAAqCZ,IACrC,sBAAMY,UAAU,oBAAhB,SACE,qBACEA,UAAU,oDACVC,IAAKC,EACLC,IAAI,OACJC,QAAS,kBAAM3B,EAASY,WAI9B,cAACG,EAAA,EAAOa,OAAR,CAAe,gBAAc,2BAC7B,cAACb,EAAA,EAAOc,SAAR,CAAiBR,GAAG,yBAApB,SACE,cAACS,EAAA,EAAD,UACGjB,OAAOC,QAAQJ,GAAUqB,KAAI,SAACC,GAAD,OAC5B,cAACF,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAII,KAAL,CAAU5B,SAAU0B,EAAS,GAAIG,KAAM,IAAMH,EAAS,GAAtD,SACGA,EAAS,MAFCA,EAAS,e,QCjDvBI,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAa1B,EAAhB,EAAgBA,SAAU2B,EAA1B,EAA0BA,SAA1B,OAClB,eAACC,EAAA,EAAD,WACE,sBACEC,IAAI,gBACJL,KAA+B,qBAGjC,sBAAMM,QAAQ,UACd,sBACEC,KAAK,WACLC,QAAQ,0DAGV,sBAAMD,KAAK,cAAcC,QAASN,IAClC,sBAAMK,KAAK,SAASC,QAAShC,IAC5B2B,M,iCCFQM,EAAO,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,kBAa9BC,EAZ8C,CAClDC,SAAUA,IACVC,aAAcA,IACdC,gBAAiBA,IACjBC,SAAUA,IACVC,QAASA,IACTC,QAASA,IACTC,QAASA,IACTC,gBAAiBA,IACjBC,QAASA,KAGoCV,IAAsBW,IACrE,OAAO,cAACV,EAAD,CAAexB,UAAWsB,EAAe,eAAa,KC1BlDa,EAAe,SAAC,GAAD,IAAGZ,EAAH,EAAGA,kBAAmBa,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,MAA5B,OAC1B,mBAAGzB,KAAMwB,EAAMpC,UAAW,iBAAkBqC,MAAOA,EAAO,aAAYA,EAAtE,SACE,cAAC,EAAD,CACEd,kBAAmBA,EACnBD,cAAe,sBCVRgB,EAAe,SAAC,GAAD,IAC1BC,EAD0B,EAC1BA,aAD0B,OAK1B,8BACGA,EAAa/B,KAAI,SAACgC,GAAD,OAChB,cAAC,EAAD,CAEEjB,kBAAmBiB,EAAOjB,kBAC1Ba,KAAMI,EAAOJ,KACbC,MAAOG,EAAOH,OAHTG,EAAO1C,U,QCPP2C,EAAe,SAAC,GAAD,IAC1BC,EAD0B,EAC1BA,MACAH,EAF0B,EAE1BA,aAF0B,OAO1B,qCACE,qBAAIvC,UAAU,OAAd,UACG0C,EAAMvB,KACP,uBAAMnB,UAAU,eAAhB,cAAiC0C,EAAMC,cAEzC,sBAAK3C,UAAU,kBAAf,UACG0C,EAAME,KADT,KACiBF,EAAMG,QADvB,IAEE,oBAAGjC,KAAM,UAAY8B,EAAMI,MAA3B,cAAoCJ,EAAMI,YAE5C,cAAC,IAAD,CAAe9C,UAAU,YAAzB,SAAsC0C,EAAMK,eAC5C,cAAC,EAAD,CAAcR,aAAcA,Q,2BChBnBS,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OAC5B,oBAAIlD,UAAW,cAAgBkD,EAA/B,SACGD,EAASzC,KAAI,SAAC9B,GACb,IAAMyE,EAAOzE,EAAQ6C,kBACnB,cAAC,EAAD,CACEA,kBAAmB7C,EAAQ6C,kBAC3BD,eACG5C,EAAQ4C,eAAiB,IAAM,0BAIpC,GAEI8B,EAAU1E,EAAQ6C,kBAAoB,YAAc,GAC1D,OACE,qBAAIvB,UAAWoD,EAAf,UACGD,EAAM,IACP,cAAC,IAAD,CACEE,WAAY,CAAEC,EAAG,cAAGC,KAAH,IAAYC,EAAZ,wBAAwB,oCAAUA,MADrD,SAGG9E,EAAQoC,gBALgBpC,EAAQoB,UChBhC2D,G,OAAiB,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,SACAC,EAF4B,EAE5BA,WACA7C,EAH4B,EAG5BA,YACA8C,EAJ4B,EAI5BA,WAJ4B,OAM5B,sBAAK5D,UAAU,kDAAf,UACE,sBAAKA,UAAU,yBAAf,UACG0D,EAASlD,KAAI,SAACqD,GAAD,OACZ,oBAAkB7D,UAAU,OAA5B,SACG6D,GADMA,MAIX,qBAAK7D,UAAU,kBAAf,SAAkC2D,IAClC,cAAC,IAAD,UAAgB7C,OAElB,qBAAKd,UAAU,2BAAf,SACG4D,EAAWpD,KAAI,SAACsD,GAAD,OACd,uBAAiB9D,UAAU,eAA3B,UACG8D,EADH,IACS,uBAAO,MADLA,aChBNC,EAAU,SAAC,GAAD,IAAGjE,EAAH,EAAGA,GAAIuC,EAAP,EAAOA,MAAOtB,EAAd,EAAcA,SAAd,OACrB,qCACE,yBAASf,UAAU,+CAA+CF,GAAIA,EAAtE,SACE,sBAAKE,UAAU,UAAf,UACGqC,EAAQ,oBAAIrC,UAAU,OAAd,SAAsBqC,IAAc,GAC5CtB,OAGL,oBAAIf,UAAU,YCFLgE,G,OAAgB,SAAC,GAAD,QAC3BC,mBAD2B,MACb,GADa,EAE3B5B,EAF2B,EAE3BA,MACAvC,EAH2B,EAG3BA,GACAiB,EAJ2B,EAI3BA,SAJ2B,OAM3B,eAAC,EAAD,CAASjB,GAAIA,EAAIuC,MAAOA,EAAxB,UACG4B,EAAYzD,KAAI,SAAC0D,GAAD,OACf,cAAC,EAAD,eAAwCA,GAAnBA,EAAWpE,OAEjCiB,OCbQoD,EAAS,SAACX,GACrB,IAuBMY,EAASZ,EAAMY,OACfC,EAAaD,EAAOC,YAAc,EAClCC,EAzBgB,SACpBrB,EACAoB,GAEA,IAAME,EAAWC,KAAKC,KAAKxB,EAASyB,OAASL,GAE7C,OAAOpB,EAAS0B,QAAO,SAACC,EAA4BC,EAAMC,GACxD,IAAMC,EAAaP,KAAKQ,MAAMF,EAAQP,GAYtC,OAVKK,EAAYG,KACfH,EAAYG,GAAc,CACxB9B,SAAU,GACVC,cAAekB,EAAOlB,eAAiB,GACvCpD,GAAIgF,IAIRF,EAAYG,GAAY9B,SAASgC,KAAKJ,GAE/BD,IACN,IAKiBM,CAAcd,EAAOnB,SAAUoB,GACrD,OACE,qCACE,qBAAKrE,UAAU,uBAAf,SAAuCoE,EAAO/B,QAC9C,qBAAKrC,UAAU,SAAf,SACGsE,EAAc9D,KAAI,SAAC2E,GAAD,OACjB,qBAEEnF,UAAW,OAASwE,KAAKQ,MAAM,GAAKX,GAFtC,SAIE,cAAC,EAAD,eAAwCc,GAAnBA,EAAWrF,KAH3BqF,EAAWrF,a,wCC7BfsF,G,OAAY,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAC1B,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAOA,OACE,qCACE,uRAIkC,IAChC,mBAAG5E,KAAK,8CAAR,8BAEK,IAPP,MAQM,IACJ,mBAAGA,KAAK,8CAAR,0BAAuE,IACvE,cAAC,IAAD,CAAkBZ,UAAW,wCAV/B,mEAWiE,IAC/D,mBAAGY,KAAK,8CAAR,0BAZF,OAcA,mFACqD,IACnD,cAAC,IAAD,CAASZ,UAAW,mBAFtB,+KAIuE,IACrE,mBAAGY,KAAK,qEAAR,mBAEK,IACL,cAAC,IAAD,CAAQZ,UAAW,6BARrB,oEAWA,qBAAKA,UAAU,cAAf,SACE,eAACyF,EAAA,EAAD,CAAQzF,UAAU,oBAAoBI,QAjCpB,WACtBoF,GAAgB,SAACD,GAAD,OAAmBA,KACnC5G,WAASF,SAAS,YAAa,KA+B3B,2BACiB8G,EAAe,OAAS,OADzC,+BAIDA,GACC,cAAC,mBAAD,UACGF,EAAS7E,KAAI,SAACkF,GAAD,OACZ,eAAC,0BAAD,CAEEC,KAAMD,EAAQC,KACdxC,KAAM,cAAC,IAAD,IACNyC,UAAW,CAAEC,WAAY,UAAWC,MAAO,QAJ7C,UAME,6BAAKJ,EAAQrD,QACb,6BAAKqD,EAAQK,WACb,4BAAIL,EAAQ5E,gBAPP4E,EAAQ5F,SAYrB,6DAC+B,IAC7B,mBAAGc,KAAK,0DAAR,iBAEK,IAJP,oBAKoB,IAClB,mBAAGA,KAAK,8CAAR,8BANF,Y,wFClBN,SAASoF,EAAsBL,GAC7B,OAAOA,EAAKM,mBAAmB,SAEjC,SAASC,EAAmBP,GAC1B,IAAMQ,EAAYR,EAAKS,MAAM,KAAK5F,KAAI,SAAC6F,GAAD,OAAUC,SAASD,MACzD,OAAO,IAAIE,KAAKJ,EAAU,GAAIA,EAAU,GAAK,EAAGA,EAAU,ICzCrD,IAAMK,EAAM,WACjB,IAAMrH,EAAqB,CACzBuD,MAAO,QACP+D,WAAY,aACZC,UAAW,YACXC,SAAU,kBACVC,SAAU,WACVxC,OAAQ,SACRyC,aAAc,eACdC,UAAW,aAGb,EDWO,CACLpE,MA3BaqE,EA4BbC,sBAzB6BC,EA0B7BC,qBAzB4BC,EA0B5BC,oBAzB2BC,EA0B3BC,mBAxB0BC,EAyB1BC,sBAxB6BC,EAyB7BC,kBAxByBC,EAyBzBpF,aAjCoBqF,EAkCpBvC,SAxB0BwC,EACzBrH,KAAI,SAACsH,GACJ,MAAO,CACLhI,GAAIgI,EAAKhI,GACT6F,MAgCgBoC,EA/Bd7B,EAAmB4B,EAAKC,WA+BOC,EA9B/B9B,EAAmB4B,EAAKE,SA+BzBD,EAAUE,YAAcD,EAAQC,UACnCjC,EAAsB+B,GACtB/B,EAAsB+B,GAAa,MAAQ/B,EAAsBgC,IA/B/D3F,MAAOyF,EAAKzF,MACZ0D,SAAU+B,EAAK/B,SACfjF,YAAagH,EAAKhH,aA0B1B,IAAwBiH,EAAiBC,KAvBpCE,WCRDxF,EADF,EACEA,MACAsE,EAFF,EAEEA,sBACAE,EAHF,EAGEA,qBACAE,EAJF,EAIEA,oBACAE,EALF,EAKEA,mBACAE,EANF,EAMEA,sBACAE,EAPF,EAOEA,kBACAnF,EARF,EAQEA,aACA8C,EATF,EASEA,SAGIjG,EAAWsD,EAAMvB,KAAO,IAAMuB,EAAMC,QAE1C,OACE,qCACE,cAAC,EAAD,CAAM7B,YAAa,sBAAuB1B,SAAUA,EAApD,SACE,gCAAQA,MAEV,cAAC,EAAD,CAAYD,SAAUA,EAAUC,SAAUA,IAC1C,sBAAKY,UAAU,sBAAf,UACE,cAAC,EAAD,CAAeF,GAAG,QAAlB,SACE,cAAC,EAAD,CAAc4C,MAAOA,EAAOH,aAAcA,MAG5C,cAAC,EAAD,CACEzC,GAAG,aACHuC,MAAOlD,EAASsH,WAChBxC,YAAa+C,IAGf,cAAC,EAAD,CACElH,GAAG,YACHuC,MAAOlD,EAASuH,UAChBzC,YAAaiD,IAGf,eAAC,EAAD,CAAepH,GAAG,WAAWuC,MAAOlD,EAASwH,SAA7C,UACE,cAAC,EAAD,eAAoBW,IADtB,6BAE4B,mBAAG1G,KAAM8B,EAAMyF,UAAf,0BAG5B,cAAC,EAAD,CACErI,GAAG,WACHuC,MAAOlD,EAASyH,SAChB3C,YAAamD,IAGf,cAAC,EAAD,CAAetH,GAAG,SAASuC,MAAOlD,EAASiF,OAA3C,SACGsD,EAAkBlH,KAAI,SAAC4D,GAAD,OACrB,cAAC,EAAD,CAAwBA,OAAQA,GAAnBA,EAAOtE,SAIxB,cAAC,EAAD,CAAeA,GAAG,eAAeuC,MAAOlD,EAAS0H,aAAjD,SACE,cAAC,EAAD,eAAoBW,MAGtB,cAAC,EAAD,CAAe1H,GAAG,YAAYuC,MAAOlD,EAAS2H,UAA9C,SACE,cAAC,EAAD,CAAWzB,SAAUA,aC1EzB+C,EAAcC,QACW,cAA7BC,OAAOvC,SAASwC,UAEe,UAA7BD,OAAOvC,SAASwC,UAEhBD,OAAOvC,SAASwC,SAASC,MACvB,2DA2CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCjGjEC,SAAgB,cAAC,EAAD,IAASC,SAASC,eAAe,SDuB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB3B,OAAOvC,SAASnF,MACpDsJ,SAAW5B,OAAOvC,SAASmE,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMuB,GAAN,sBAEP7B,IAgEV,SAAiCM,EAAeC,GAE9CyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,MAAK,WAC7BT,OAAOvC,SAAS8E,eAKpBpC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAsB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OC9C/BE,I","file":"static/js/main.25ca3bc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/face.cb0c7d15.webp\";","import face from \"./face.webp\";\nimport { scroller } from \"react-scroll\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"./navigation.scss\";\nimport { Sections } from \"../../App\";\n\ntype Props = {\n  fullName: string;\n  sections: Sections;\n};\n\n/* these 2 functions together with properties of body allow scroll spying and smooth scroll */\nconst scrollTo = (element: string) => {\n  scroller.scrollTo(element, {\n    duration: 300,\n    smooth: \"easeInOutQuint\",\n  });\n};\n\nconst onSelect = (\n  eventKey: string | null,\n  event: React.SyntheticEvent<unknown>\n) => {\n  event.preventDefault();\n  if (eventKey) {\n    scrollTo(eventKey);\n  }\n};\n\nexport const Navigation = ({ sections, fullName }: Props) => {\n  const firstSectionKey = Object.entries(sections)[1][0];\n\n  return (\n    <Navbar\n      expand=\"lg\"\n      bg=\"primary\"\n      variant=\"dark\"\n      fixed=\"top\"\n      collapseOnSelect\n      onSelect={onSelect}\n      id=\"sideNav\"\n    >\n      <Navbar.Brand>\n        <span className=\"d-block d-lg-none\">{fullName}</span>\n        <span className=\"d-none d-lg-block\">\n          <img\n            className=\"img-fluid img-profile rounded-circle mx-auto mb-2\"\n            src={face}\n            alt=\"Face\"\n            onClick={() => scrollTo(firstSectionKey)}\n          />\n        </span>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"navbarSupportedContent\" />\n      <Navbar.Collapse id=\"navbarSupportedContent\">\n        <Nav>\n          {Object.entries(sections).map((keyValue) => (\n            <Nav.Item key={keyValue[0]}>\n              <Nav.Link eventKey={keyValue[0]} href={\"#\" + keyValue[0]}>\n                {keyValue[1]}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n","import { Helmet } from \"react-helmet\";\n\ntype Props = {\n  description: string;\n  fullName: string;\n  children?: React.ReactNode;\n};\n\nexport const Head = ({ description, fullName, children }: Props) => (\n  <Helmet>\n    <link\n      rel=\"shortcut icon\"\n      href={process.env.PUBLIC_URL + \"/img/favicon.ico\"}\n    />\n\n    <meta charSet=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n\n    <meta name=\"description\" content={description} />\n    <meta name=\"author\" content={fullName} />\n    {children}\n  </Helmet>\n);\n","import {\n  FaAward,\n  FaCheck,\n  FaGithub,\n  FaGitlab,\n  FaGraduationCap,\n  FaHeart,\n  FaLinkedinIn,\n  FaMedal,\n  FaStackOverflow,\n} from \"react-icons/fa\";\n\nimport \"./icon.scss\";\nimport { IconType } from \"react-icons\";\nimport { GiFlame } from \"react-icons/gi\";\n\ntype Props = {\n  iconComponentName: string;\n  iconClassName: string;\n};\n\nexport const Icon = ({ iconClassName, iconComponentName }: Props) => {\n  const iconComponents: { [key: string]: IconType } = {\n    FaGithub: FaGithub,\n    FaLinkedinIn: FaLinkedinIn,\n    FaStackOverflow: FaStackOverflow,\n    FaGitlab: FaGitlab,\n    FaHeart: FaHeart,\n    FaAward: FaAward,\n    FaMedal: FaMedal,\n    FaGraduationCap: FaGraduationCap,\n    FaCheck: FaCheck,\n  };\n\n  const IconComponent: IconType = iconComponents[iconComponentName] || GiFlame;\n  return <IconComponent className={iconClassName} aria-hidden={true} />;\n};\n","import \"./icon-wth-link.scss\";\nimport { Icon } from \"./Icon\";\n\ntype Props = {\n  iconComponentName: string;\n  link: string;\n  title: string;\n};\n\nexport const IconWithLink = ({ iconComponentName, link, title }: Props) => (\n  <a href={link} className={\"icon-with-link\"} title={title} aria-label={title}>\n    <Icon\n      iconComponentName={iconComponentName}\n      iconClassName={\"svg-inline--fa\"}\n    />\n  </a>\n);\n","import { SocialMedia } from \"../../../data/types\";\nimport { IconWithLink } from \"../../icons/IconWithLink\";\n\nexport const SocialMedias = ({\n  socialMedias,\n}: {\n  socialMedias: SocialMedia[];\n}) => (\n  <div>\n    {socialMedias.map((social: SocialMedia) => (\n      <IconWithLink\n        key={social.id}\n        iconComponentName={social.iconComponentName}\n        link={social.link}\n        title={social.title}\n      />\n    ))}\n  </div>\n);\n","import { SocialMedias } from \"./SocialMedias\";\nimport ReactMarkdown from \"react-markdown\";\nimport { About, SocialMedia } from \"../../../data/types\";\n\nexport const AboutSection = ({\n  about,\n  socialMedias,\n}: {\n  about: About;\n  socialMedias: SocialMedia[];\n}) => (\n  <>\n    <h1 className=\"mb-0\">\n      {about.name}\n      <span className=\"text-primary\"> {about.surname}</span>\n    </h1>\n    <div className=\"subheading mb-5\">\n      {about.city}, {about.country},\n      <a href={\"mailto:\" + about.email}> {about.email}</a>\n    </div>\n    <ReactMarkdown className=\"lead mb-5\">{about.introduction}</ReactMarkdown>\n    <SocialMedias socialMedias={socialMedias} />\n  </>\n);\n","import ReactMarkdown from \"react-markdown\";\nimport { ResumeList } from \"../../data/types\";\nimport { Icon } from \"../icons/Icon\";\nimport \"./resume-list.scss\";\n\nexport const ResumeListView = ({ elements, listClassName }: ResumeList) => (\n  <ul className={\"fa-ul mb-0 \" + listClassName}>\n    {elements.map((element) => {\n      const icon = element.iconComponentName ? (\n        <Icon\n          iconComponentName={element.iconComponentName}\n          iconClassName={\n            (element.iconClassName || \"\") + \" svg-inline--fa fa-li\"\n          }\n        />\n      ) : (\n        \"\"\n      );\n      const liStyle = element.iconComponentName ? \"list-none\" : \"\";\n      return (\n        <li className={liStyle} key={element.id}>\n          {icon}{\" \"}\n          <ReactMarkdown\n            components={{ p: ({ node, ...props }) => <span {...props} /> }}\n          >\n            {element.description}\n          </ReactMarkdown>\n        </li>\n      );\n    })}\n  </ul>\n);\n","import ReactMarkdown from \"react-markdown\";\nimport { ResumeItem } from \"../../data/types\";\nimport \"./resume-item.scss\";\n\nexport const ResumeItemView = ({\n  headings,\n  subheading,\n  description,\n  extraInfos,\n}: ResumeItem) => (\n  <div className=\"resume-item d-flex flex-column flex-md-row mb-5\">\n    <div className=\"resume-content me-auto\">\n      {headings.map((heading) => (\n        <h3 key={heading} className=\"mb-0\">\n          {heading}\n        </h3>\n      ))}\n      <div className=\"subheading mb-3\">{subheading}</div>\n      <ReactMarkdown>{description}</ReactMarkdown>\n    </div>\n    <div className=\"resume-extra text-md-end\">\n      {extraInfos.map((info) => (\n        <span key={info} className=\"text-primary\">\n          {info} <br />{\" \"}\n        </span>\n      ))}\n    </div>\n  </div>\n);\n","type Props = {\n  id: string;\n  title?: string;\n  children?: React.ReactNode;\n};\n\nexport const Section = ({ id, title, children }: Props) => (\n  <>\n    <section className=\"resume-section p-3 p-lg-5 d-flex flex-column\" id={id}>\n      <div className=\"my-auto\">\n        {title ? <h2 className=\"mb-5\">{title}</h2> : \"\"}\n        {children}\n      </div>\n    </section>\n    <hr className=\"m-0\" />\n  </>\n);\n","import { ResumeItemView } from \"./ResumeItemView\";\nimport { Section } from \"../sections/Section\";\nimport \"./resume-section.scss\";\nimport { ResumeItem } from \"../../data/types\";\n\ntype Props = {\n  id: string;\n  title?: string;\n  resumeItems?: ResumeItem[];\n  children?: React.ReactNode;\n};\n\nexport const ResumeSection = ({\n  resumeItems = [],\n  title,\n  id,\n  children,\n}: Props) => (\n  <Section id={id} title={title}>\n    {resumeItems.map((resumeItem) => (\n      <ResumeItemView key={resumeItem.id} {...resumeItem} />\n    ))}\n    {children}\n  </Section>\n);\n","import { ResumeList, ResumeListElement } from \"../../../data/types\";\nimport { ResumeListView } from \"../../resume/ResumeListView\";\n\ntype SkillsChunk = {\n  id: number;\n  elements: ResumeListElement[];\n  listClassName: string;\n};\n\nexport const Skills = (props: { skills: ResumeList }) => {\n  const splitToChunks = function (\n    elements: ResumeListElement[],\n    numColumns: number\n  ): SkillsChunk[] {\n    const perChunk = Math.ceil(elements.length / numColumns);\n\n    return elements.reduce((resultArray: SkillsChunk[], item, index) => {\n      const chunkIndex = Math.floor(index / perChunk);\n\n      if (!resultArray[chunkIndex]) {\n        resultArray[chunkIndex] = {\n          elements: [],\n          listClassName: skills.listClassName || \"\",\n          id: index,\n        };\n      }\n\n      resultArray[chunkIndex].elements.push(item);\n\n      return resultArray;\n    }, []);\n  };\n\n  const skills = props.skills;\n  const numColumns = skills.numColumns || 1;\n  const skillsChunked = splitToChunks(skills.elements, numColumns);\n  return (\n    <>\n      <div className=\"subheading mb-3 mt-2\">{skills.title}</div>\n      <div className=\"d-flex\">\n        {skillsChunked.map((skillChunk) => (\n          <div\n            key={skillChunk.id}\n            className={\"col-\" + Math.floor(12 / numColumns)}\n          >\n            <ResumeListView key={skillChunk.id} {...skillChunk} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { scroller } from \"react-scroll\";\nimport \"./interests.scss\";\nimport { GiGuitar } from \"react-icons/gi\";\nimport { FaBasketballBall, FaBook, FaPlane } from \"react-icons/fa\";\nimport { Concert } from \"../../../data/types\";\n\nexport const Interests = ({ concerts }: { concerts: Concert[] }) => {\n  const [showConcerts, setShowConcerts] = useState(false);\n\n  const onConcertsClick = () => {\n    setShowConcerts((showConcerts) => !showConcerts);\n    scroller.scrollTo(\"interests\", {});\n  };\n\n  return (\n    <>\n      <p>\n        Apart from being a programmer and a student, I mostly enjoy doing and\n        watching various sports, especially basketball, athletics, swimming and\n        football. Among basketball leagues I consider NBA to be most fascinating\n        and my two favorite players are{\" \"}\n        <a href=\"https://www.youtube.com/watch?v=w3l3txhX0L4\">\n          Russel Westbrook\n        </a>{\" \"}\n        and{\" \"}\n        <a href=\"https://www.youtube.com/watch?v=-f6TnC0xFPY\">Kevin Durant</a>{\" \"}\n        <FaBasketballBall className={\"basketball-ball-icon svg-inline--fa\"} />.\n        As a former sprinter I am still shocked by Wayde van Niekerk's{\" \"}\n        <a href=\"https://www.youtube.com/watch?v=xG91krXuxyw\">world record</a>.\n      </p>\n      <p>\n        As for my other interests, I am keen on travelling{\" \"}\n        <FaPlane className={\"svg-inline--fa\"} /> (most beautiful city - Porto,\n        Portugal, most astonishing view - Tatev, Armenia, best beach - Tangalle,\n        Sri Lanka). In my free time I like visiting escape rooms and reading{\" \"}\n        <a href=\"https://www.goodreads.com/user/show/100417409-stanis-aw-wilczy-ski\">\n          books\n        </a>{\" \"}\n        <FaBook className={\"book-icon svg-inline--fa\"} />. However, my most\n        beloved activity is going to rock concerts.\n      </p>\n      <div className=\"d-grid mb-2\">\n        <Button className=\"mt-2 btn-concerts\" onClick={onConcertsClick}>\n          Click here to {showConcerts ? \"hide\" : \"view\"} the full concerts list\n        </Button>\n      </div>\n      {showConcerts && (\n        <VerticalTimeline>\n          {concerts.map((concert) => (\n            <VerticalTimelineElement\n              key={concert.id}\n              date={concert.date}\n              icon={<GiGuitar />}\n              iconStyle={{ background: \"#4479a2\", color: \"#fff\" }}\n            >\n              <h3>{concert.title}</h3>\n              <h4>{concert.location}</h4>\n              <p>{concert.description}</p>\n            </VerticalTimelineElement>\n          ))}\n        </VerticalTimeline>\n      )}\n      <p>\n        I am also an avid fan of the{\" \"}\n        <a href=\"https://en.wikipedia.org/wiki/Marvel_Cinematic_Universe\">\n          MCU\n        </a>{\" \"}\n        and a follower of{\" \"}\n        <a href=\"https://www.gapminder.org/factfulness-book/\">\n          Factfulness idea\n        </a>\n        .\n      </p>\n    </>\n  );\n};\n","import achievementListData from \"./jsons/achievements.json\";\nimport projectListData from \"./jsons/projects.json\";\nimport experienceListData from \"./jsons/experience.json\";\nimport educationListData from \"./jsons/education.json\";\nimport researchListData from \"./jsons/reasearch.json\";\nimport skillListData from \"./jsons/skills.json\";\nimport aboutData from \"./jsons/about.json\";\nimport socialMedia from \"./jsons/social-media.json\";\nimport concertsData from \"./jsons/concerts.json\";\nimport { About, Concert, ResumeItem, ResumeList, SocialMedia } from \"./types\";\n\nexport const getData = () => {\n  const about = (aboutData as unknown) as About;\n  const socialMedias = (socialMedia as unknown) as SocialMedia[];\n\n  const experienceResumeItems = (experienceListData as unknown) as ResumeItem[];\n  const educationResumeItems = (educationListData as unknown) as ResumeItem[];\n  const researchResumeItems = (researchListData as unknown) as ResumeItem[];\n\n  const projectsResumeList = (projectListData as unknown) as ResumeList;\n  const achievementResumeList = (achievementListData as unknown) as ResumeList;\n  const skillsResumeLists = (skillListData as unknown) as ResumeList[];\n\n  const concerts: Concert[] = concertsData\n    .map((data) => {\n      return {\n        id: data.id,\n        date: getConcertDate(\n          readDateFromString(data.startDate),\n          readDateFromString(data.endDate)\n        ),\n        title: data.title,\n        location: data.location,\n        description: data.description,\n      };\n    })\n    .reverse();\n\n  return {\n    about,\n    experienceResumeItems,\n    educationResumeItems,\n    researchResumeItems,\n    projectsResumeList,\n    achievementResumeList,\n    skillsResumeLists,\n    socialMedias,\n    concerts,\n  };\n};\n\nfunction dateToLocalizedString(date: Date) {\n  return date.toLocaleDateString(\"pl-PL\");\n}\nfunction readDateFromString(date: string) {\n  const dateParts = date.split(\".\").map((part) => parseInt(part));\n  return new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);\n}\n\nfunction getConcertDate(startDate: Date, endDate: Date): string {\n  return startDate.getTime() === endDate.getTime()\n    ? dateToLocalizedString(startDate)\n    : dateToLocalizedString(startDate) + \" - \" + dateToLocalizedString(endDate);\n}\n","import { Navigation } from \"./components/navigation/Navigation\";\nimport { Head } from \"./components/head/Head\";\nimport { AboutSection } from \"./components/sections/about/AboutSection\";\nimport { ResumeListView } from \"./components/resume/ResumeListView\";\nimport { ResumeSection } from \"./components/resume/ResumeSection\";\nimport { Skills } from \"./components/sections/skills/Skills\";\nimport { Interests } from \"./components/sections/interests/Interests\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./resume.scss\";\nimport { getData } from \"./data/getData\";\n\nexport type Sections = {\n  [key: string]: string;\n};\n\nexport const App = () => {\n  const sections: Sections = {\n    about: \"About\",\n    experience: \"Experience\",\n    education: \"Education\",\n    projects: \"Projects & apps\",\n    research: \"Research\",\n    skills: \"Skills\",\n    achievements: \"Achievements\",\n    interests: \"Interests\",\n  };\n\n  const {\n    about,\n    experienceResumeItems,\n    educationResumeItems,\n    researchResumeItems,\n    projectsResumeList,\n    achievementResumeList,\n    skillsResumeLists,\n    socialMedias,\n    concerts,\n  } = getData();\n\n  const fullName = about.name + \" \" + about.surname;\n\n  return (\n    <>\n      <Head description={\"CV page using React\"} fullName={fullName}>\n        <title>{fullName}</title>\n      </Head>\n      <Navigation sections={sections} fullName={fullName} />\n      <div className=\"container-fluid p-0\">\n        <ResumeSection id=\"about\">\n          <AboutSection about={about} socialMedias={socialMedias} />\n        </ResumeSection>\n\n        <ResumeSection\n          id=\"experience\"\n          title={sections.experience}\n          resumeItems={experienceResumeItems}\n        />\n\n        <ResumeSection\n          id=\"education\"\n          title={sections.education}\n          resumeItems={educationResumeItems}\n        />\n\n        <ResumeSection id=\"projects\" title={sections.projects}>\n          <ResumeListView {...projectsResumeList} />\n          More code can be found on <a href={about.githubUrl}>my github</a>\n        </ResumeSection>\n\n        <ResumeSection\n          id=\"research\"\n          title={sections.research}\n          resumeItems={researchResumeItems}\n        />\n\n        <ResumeSection id=\"skills\" title={sections.skills}>\n          {skillsResumeLists.map((skills) => (\n            <Skills key={skills.id} skills={skills} />\n          ))}\n        </ResumeSection>\n\n        <ResumeSection id=\"achievements\" title={sections.achievements}>\n          <ResumeListView {...achievementResumeList} />\n        </ResumeSection>\n\n        <ResumeSection id=\"interests\" title={sections.interests}>\n          <Interests concerts={concerts} />\n        </ResumeSection>\n      </div>\n    </>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}